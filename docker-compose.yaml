version: '3.1'

services:
  zoo1:
    image: zookeeper
    restart: always
    hostname: zoo1
    ports:
      - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo2:
    image: zookeeper
    restart: always
    hostname: zoo2
    ports:
      - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoo3:
    image: zookeeper
    restart: always
    hostname: zoo3
    ports:
      - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;2181

  zoonavigator:
    image: elkozmon/zoonavigator:latest
    ports:
      - 9000:9000
    environment:
     HTTP_PORT: 9000
     CONNECTION_LOCALZK_NAME: ZooKeeper Docker CLuster
     CONNECTION_LOCALZK_CONN: zoo1:2181
    restart: always

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - zoo1
      - zoo2
      - zoo3

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    volumes:
      - .grafana:/var/lib/grafana

  app1:
    volumes:
      - .data:/tmp/election
    build:
      context: .
      dockerfile: Dockerfile

  app2:
    volumes:
      - .data:/tmp/election
    build:
      context: .
      dockerfile: Dockerfile

  app3:
    volumes:
      - .data:/tmp/election
    build:
      context: .
      dockerfile: Dockerfile
